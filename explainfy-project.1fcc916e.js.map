{"mappings":"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YACxB,OAAOxD,QAAQ6D,KAAKL,KAAK;YAE7B;YAEAH,SAASpE,eAAeoE;QAC1B;QAEA,SAASU;YACP,OAAO;QACT;QAEA,OAAOA;IACT;IC3MO,MAAMC,SAAO5E,OAAO;QACzB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAM6E,QAAM7E,OAAO;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAM8E,aAAa9E,OAAO;QAC/B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEV,uDAAA;IACA,yDAAA;IACA,mDAAA;IACA,cAAA;IACO,MAAM+E,gBAAgB/E,OAAO;QAClC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAMgF,WAAShF,OAAO;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEV,yDAAA;IACA,0CAAA;IACO,MAAMiF,mBAAmBjF,OAAO;QACrC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACQ;IAEH,MAAMkF,OAAOlF,OAAO;QAAC;KAAiB;ICpRtC,MAAM4E,OAAO5E,OAAO;QACzxgF,SAAShF,OAAO;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAEM,MAAMmF,MAAMnF,OAAO;QACxB;QACA;QACA;QACA;QACA;KACQ;IChXV,gDAAA;IACO,MAAMoF,gBAAgBnF,KAAK,8BAA3B,+DAAA;IACA,MAAMoF,WAAWpF,KAAK;IACtB,MAAMqF,cAAcrF,KAAK,kBAAzB,2CAAA;IACA,MAAMsF,YAAYtF,KAAK,iCAAvB,wCAAA;IACA,MAAMuF,YAAYvF,KAAK,mBAAvB,wCAAA;IACA,MAAMwF,iBAAiBxF,KAC5B,4FADK,wCAAA;;IAGA,MAAMyF,oBAAoBzF,KAAK;IAC/B,MAAM0F,kBAAkB1F,KAC7B,8DADK,uCAAA;;IAGA,MAAM2F,eAAe3F,KAAK;IAC1B,MAAM4F,iBAAiB5F,KAAK;I,I,c,W,G,O,M,C;Q,W;Q,W;Q,iB;Q,gB;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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-6ec0064e669cd081.js","src/main.js","src/api.js","src/settings.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/ui.js","node_modules/dompurify/dist/purify.js","node_modules/dompurify/src/utils.ts","node_modules/dompurify/src/tags.ts","node_modules/dompurify/src/attrs.ts","node_modules/dompurify/src/regexp.ts","node_modules/dompurify/src/purify.ts","node_modules/marked/lib/marked.umd.js","node_modules/marked/src/defaults.ts","node_modules/marked/src/rules.ts","node_modules/marked/src/helpers.ts","node_modules/marked/src/Tokenizer.ts","node_modules/marked/src/Lexer.ts","node_modules/marked/src/Renderer.ts","node_modules/marked/src/TextRenderer.ts","node_modules/marked/src/Parser.ts","node_modules/marked/src/Hooks.ts","node_modules/marked/src/Instance.ts","node_modules/marked/src/marked.ts","node_modules/micromodal/dist/micromodal.es.js","src/db.js","node_modules/idb/build/index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 8080;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"47f455d51fcc916e\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import * as api from \"./api.js\";\nimport * as db from \"./db.js\";\nimport {\n  getApiKey,\n  getSettings,\n  initializeSettings,\n  saveSettings,\n} from \"./settings.js\";\nimport * as ui from \"./ui.js\";\n\n// --- DOM要素のキャッシュ (ページロード時に一度だけ取得) ---\n// 主要なセクション\nconst urlInputSection = document.getElementById(\"url-input-section\");\nconst historyListElement = document.getElementById(\"history-list\");\n\n// URL入力関連\nconst urlTextarea = document.getElementById(\"url-input\");\nconst submitButton = document.getElementById(\"submit-button\");\n\n// 応答関連\nconst additionalQuestionTextarea = document.getElementById(\n  \"additional-question-input\"\n);\nconst submitAdditionalQuestionButton = document.getElementById(\n  \"submit-additional-question-button\"\n);\n\n// ヘッダー関連\nconst logoLink = document.getElementById(\"logo-link\");\nconst settingButton = document.getElementById(\"setting-button\");\n\n// モーダル関連\nconst saveModalSettingsButton = document.getElementById(\n  \"save-modal-settings-button\"\n);\nconst modalTabs = document.querySelectorAll(\".modal-tabs .tab-item\");\nconst tabContents = document.querySelectorAll(\".modal__content .tab-content\");\nlet currentActiveSessionId = null;\nlet currentTurns = []; //現在の会話のターンを保持する配列\n\n// --- 初期化処理 ---\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  initializeSettings(); // settings.js の初期化を呼ぶ\n  ui.initializeUI(); // ui.js のUI初期化を呼ぶ\n  ui.initializeTextareaAutoHeight(urlTextarea, 1);\n  ui.initializeTextareaAutoHeight(\n    document.getElementById(\"additional-question-input\"),\n    1\n  );\n  await updateAndRenderHistory();\n  setupEventListeners();\n  ui.showPage(urlInputSection); // 初期表示\n  if (!getApiKey(\"jina\") || !getApiKey(\"gemini\")) {\n    alert(\"APIキーが設定されていません。設定画面を開きます。\");\n    ui.populateModalFormWithSettings(getSettings()); // 現在の設定をモーダルに反映\n    ui.openSettingsModal();\n  }\n});\n// --- 関数定義 ---\nfunction setupEventListeners() {\n  if (settingButton) {\n    settingButton.addEventListener(\"click\", () => {\n      ui.populateModalFormWithSettings(getSettings());\n      ui.openSettingsModal();\n    });\n  }\n\n  if (saveModalSettingsButton) {\n    saveModalSettingsButton.addEventListener(\"click\", handleSaveSettings);\n  }\n\n  if (logoLink) {\n    logoLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      ui.showPage(urlInputSection);\n    });\n  }\n  if (historyListElement) {\n    historyListElement.addEventListener(\"click\", async (event) => {\n      const link = event.target.closest(\"a[data-session-id]\");\n      if (!link) return;\n\n      event.preventDefault();\n      const sessionId = link.dataset.sessionId;\n      if (!sessionId) return;\n\n      ui.displayLoadingMessage(\"<p>履歴を読み込んでいます...</p>\"); // ローディング表示\n      ui.showPage(document.getElementById(\"response-section\")); // 先に応答画面に切り替え\n\n      try {\n        const sessionData = await db.getSession(sessionId);\n        if (sessionData && sessionData.turns) {\n          currentActiveSessionId = sessionId;\n          currentTurns = sessionData.turns;\n          ui.renderConversationTurns(currentTurns);\n          ui.updateResponseTitle(sessionData.originalTitle || \"説明結果\");\n        } else {\n          ui.displayErrorMessage(\"選択された履歴の読み込みに失敗しました。\");\n          currentActiveSessionId = null;\n          currentTurns = [];\n        }\n      } catch (error) {\n        console.error(\"履歴の読み込み中にエラー:\", error);\n        ui.displayErrorMessage(\"履歴の読み込み中にエラーが発生しました。\");\n        currentActiveSessionId = null;\n        currentTurns = [];\n      }\n    });\n  }\n\n  if (submitButton && urlTextarea) {\n    submitButton.addEventListener(\"click\", handleSubmit);\n    urlTextarea.addEventListener(\"keydown\", (event) => {\n      // Ctrl + Enter (または Meta + Enter for Mac) で送信\n      if (event.key === \"Enter\" && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault(); // デフォルトのEnterキーの動作（改行）をキャンセル\n        submitButton.click(); // 送信ボタンのクリックイベントを発火\n      }\n    });\n  }\n\n  if (submitAdditionalQuestionButton && additionalQuestionTextarea) {\n    submitAdditionalQuestionButton.addEventListener(\n      \"click\",\n      handleAdditionalQuestion\n    );\n    additionalQuestionTextarea.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Enter\" && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        handleAdditionalQuestion(); // Ctrl+Enterでも同じ関数を呼ぶ\n      }\n    });\n  }\n\n  modalTabs.forEach((tab) => {\n    tab.addEventListener(\"click\", () => {\n      modalTabs.forEach((t) => t.classList.remove(\"active-tab\"));\n      tabContents.forEach((c) => c.classList.remove(\"active-tab-content\"));\n      tab.classList.add(\"active-tab\");\n      const targetContentId = tab.dataset.tabTarget;\n      document\n        .querySelector(targetContentId)\n        .classList.add(\"active-tab-content\");\n    });\n  });\n}\nasync function updateAndRenderHistory() {\n  try {\n    const summaries = await db.getAllSessionSummaries();\n    ui.renderHistoryList(summaries);\n  } catch (error) {\n    console.error(\"履歴の取得または表示に失敗しました:\", error);\n    // ui.renderHistoryList([]); // 空のリストを表示するなどのフォールバック\n  }\n}\n\nasync function handleSubmit() {\n  if (!getApiKey(\"jina\") || !getApiKey(\"gemini\")) {\n    alert(\"APIキーを入力してください\");\n    ui.populateModalFormWithSettings(getSettings());\n    ui.openSettingsModal();\n    return;\n  }\n  const urlToProcess = urlTextarea.value.trim();\n  if (!urlToProcess) {\n    alert(\"URLを入力してください。\");\n    return;\n  }\n\n  ui.displayLoadingMessage();\n  ui.showPage(document.getElementById(\"response-section\"));\n  const newSessionId = crypto.randomUUID(); // UUIDを生成\n  currentActiveSessionId = newSessionId; // 現在のセッションIDとして保持 (main.js内の変数)\n  try {\n    const userSettings = getSettings();\n    const summaryResult = await api.getDocumentSummary(\n      urlToProcess,\n      userSettings\n    );\n\n    if (summaryResult.error) {\n      ui.displayErrorMessage(summaryResult.error);\n    } else {\n      ui.updateResponseTitle(summaryResult.title || \"説明結果\");\n      const userTurnContent =\n        summaryResult.actualPromptSentToLLM ||\n        `ドキュメント: ${urlToProcess} の説明を依頼`;\n      const modelTurnContent = summaryResult.summaryMarkdown;\n\n      currentTurns = [\n        { role: \"user\", parts: [{ text: userTurnContent }] },\n        { role: \"model\", parts: [{ text: modelTurnContent }] },\n      ];\n      const sessionData = {\n        id: currentActiveSessionId,\n        originalUrl: urlToProcess,\n        originalTitle: summaryResult.title,\n        createdAt: Date.now(),\n        turns: currentTurns, // 現在のturnsを保存\n      };\n      await db.saveOrUpdateSession(sessionData);\n      ui.renderConversationTurns(currentTurns); // UIにも反映\n      await updateAndRenderHistory();\n    }\n  } catch (error) {\n    console.error(\"getDocumentSummary 呼び出し中にエラー:\", error);\n    ui.displayErrorMessage(\"予期せぬエラーが発生しました。\");\n  }\n}\n\nfunction handleSaveSettings() {\n  const newSettings = ui.getSettingsFromModalForm();\n  if (newSettings) {\n    saveSettings(newSettings);\n    alert(\"設定を保存しました。\");\n    // APIキーが保存されたかどうかの再チェックとUIへのフィードバック\n    if (!getApiKey(\"jina\") || !getApiKey(\"gemini\")) {\n      alert(\"APIキーがまだ設定されていません。一部機能が利用できません。\");\n      ui.highlightEmptyApiKeysInModal();\n      return;\n    } else {\n      ui.clearApiKeyErrorStylesInModal();\n    }\n  } else {\n    // getSettingsFromModalForm で問題があった場合 (通常は起こらないはず)\n    console.error(\"モーダルからの設定取得に失敗しました。\");\n  }\n  ui.closeSettingsModal();\n}\nasync function handleAdditionalQuestion() {\n  if (!currentActiveSessionId) {\n    alert(\"まず最初の質問を行うか、履歴から会話を選択してください。\");\n    return;\n  }\n  const newQuestionText = additionalQuestionTextarea.value.trim();\n  if (!newQuestionText) {\n    alert(\"追加の質問を入力してください。\");\n    return;\n  }\n\n  if (!getApiKey(\"gemini\")) {\n    // Jinaはここでは不要\n    alert(\"Gemini APIキーが設定されていません。\");\n    ui.populateModalFormWithSettings(getSettings());\n    ui.openSettingsModal();\n    return;\n  }\n\n  // UIにユーザーの質問を即時反映 (送信中であることが分かるように)\n  const userTurnForUI = {\n    role: \"user\",\n    parts: [{ text: newQuestionText }],\n    timestamp: Date.now(),\n  };\n  currentTurns.push(userTurnForUI);\n  ui.renderConversationTurns(currentTurns); // 新しい質問をUIに追加\n  additionalQuestionTextarea.value = \"\"; // 入力欄クリア\n  ui.displayLoadingMessage(\"<p>AIが応答を考えています...</p>\"); // ローディング表示を応答エリアの末尾に\n\n  try {\n    const userSettings = getSettings();\n    // APIに渡す履歴からはtimestampを除く\n    const historyForApi = currentTurns.slice(0, -1).map((turn) => ({\n      // 最後に追加したUI用ユーザーターンを除く\n      role: turn.role,\n      parts: turn.parts.map((p) => ({ text: p.text })),\n    }));\n\n    const result = await api.getFollowUpResponse(\n      historyForApi,\n      newQuestionText,\n      userSettings\n    );\n\n    if (result.error) {\n      ui.displayErrorMessage(result.error);\n      currentTurns.pop(); // 送信失敗したのでUIからユーザーの質問を削除 (またはエラー表示に置き換える)\n      ui.renderConversationTurns(currentTurns); // UI更新\n    } else {\n      const modelTurnForStorage = {\n        role: \"model\",\n        parts: [{ text: result.modelResponseMarkdown }],\n        timestamp: Date.now(),\n      };\n      // currentTurns の最後の要素 (UIに表示したユーザーの質問) の後にモデルの応答を追加\n      // currentTurns.pop(); // UI用に追加したユーザーの質問を一度削除し、API応答と一緒にDB保存用の形式で再追加する\n      // 上記だとtimestampがずれるので、メモリ上のcurrentTurnsはそのままにして、\n      // DB保存時はAPIに送ったnewQuestionTextとAPIからの応答をペアにする\n      currentTurns[currentTurns.length - 1] = {\n        // 最後にUIに追加したユーザーの質問を更新(timestampはそのまま)\n        role: \"user\",\n        parts: [{ text: newQuestionText }],\n        timestamp: userTurnForUI.timestamp, // 送信した質問を確定\n      };\n      currentTurns.push(modelTurnForStorage);\n\n      // DBに保存\n      const sessionToUpdate = await db.getSession(currentActiveSessionId);\n      if (sessionToUpdate) {\n        sessionToUpdate.turns = currentTurns.map((turn) => ({\n          // DB保存用にはtimestampを含める\n          role: turn.role,\n          parts: turn.parts, // partsはそのまま\n          timestamp: turn.timestamp || Date.now(), // なければ現在の時刻\n        }));\n        await db.saveOrUpdateSession(sessionToUpdate);\n      }\n      ui.renderConversationTurns(currentTurns); // 全体を再描画\n      await updateAndRenderHistory(); // 履歴リストも更新\n    }\n  } catch (error) {\n    console.error(\"追加質問処理中にエラー:\", error);\n    ui.displayErrorMessage(\"追加質問の処理中に予期せぬエラーが発生しました。\");\n    // 必要なら currentTurns から最後のユーザー質問を削除\n  } finally {\n    // ローディング解除 (エラーでも成功でも responseOutput は上書きされるので不要かも)\n  }\n}\n","import { getApiKey } from \"./settings.js\";\n\nconst GEMINI_MODEL = \"gemini-2.5-flash-preview-04-17\";\nconst DEFAULT_SYSTEM_PROMPT_PARTS = [\n  // システム側の固定指示を配列で管理\n  \"あなたは公式ドキュメントの内容を解説する専門家です。\",\n  \"ユーザーのレベルや追加の指示に合わせて、提供されたドキュメントの本文を説明してください。\",\n  \"回答はマークダウン形式で、見出し、リスト、太字などを効果的に使用し、構造的に分かりやすく記述してください。\",\n  \"回答には、前置きや定型的な挨拶、感謝の言葉などは一切含めず、説明内容のみを出力してください。\",\n];\n\nasync function fetchArticleContentInternal(url, jinaApiKey) {\n  if (!jinaApiKey) {\n    return { error: \"Jina APIキーが設定されていません。\" };\n  }\n  const readerApiUrl = `https://r.jina.ai/${url}`;\n  try {\n    const response = await fetch(readerApiUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${jinaApiKey}`,\n        Accept: \"application/json\",\n      },\n    });\n    if (!response.ok) {\n      const errorData = await response\n        .json()\n        .catch(() => ({ message: response.statusText }));\n      return {\n        error: `Jina APIからのコンテンツ取得に失敗しました: ${errorData.message || response.status}`,\n      };\n    }\n    const data = await response.json();\n    if (data && data.data && data.data.content) {\n      return { content: data.data.content, title: data.data.title || null };\n    }\n    return { error: \"Jina APIが期待されるコンテンツ構造を返しませんでした。\" };\n  } catch (e) {\n    console.error(\"fetchArticleContentInternal error:\", e);\n    return {\n      error: \"記事コンテンツの取得中にネットワークエラーが発生しました。\",\n    };\n  }\n}\n\nasync function generateSummaryWithGeminiInternal(\n  textToSummarize,\n  userSettings,\n  geminiApiKey\n) {\n  // internal\n  if (!geminiApiKey) {\n    return { error: \"Gemini APIキーが設定されていません。\" };\n  }\n\n  // --- ここでプロンプトエンジニアリングを行う ---\n  let promptParts = [...DEFAULT_SYSTEM_PROMPT_PARTS];\n\n  // ユーザーレベルに応じた指示を追加\n  if (userSettings.userLevel) {\n    let levelDescription = \"\";\n    switch (userSettings.userLevel) {\n      case 1:\n        levelDescription =\n          \"対象読者はプログラミング完全初学者です。専門用語は避け、非常に基本的な概念から丁寧に説明してください。\";\n        break;\n      case 2:\n        levelDescription =\n          \"対象読者はプログラミング初学者です。基本的な用語は使っても良いですが、平易な言葉で説明してください。\";\n        break;\n      case 3:\n        levelDescription =\n          \"対象読者はプログラミング中級者です。ある程度の専門用語や抽象的な概念も理解できます。\";\n        break;\n      case 4:\n        levelDescription =\n          \"対象読者はプログラミング上級者です。簡潔かつ技術的に正確な説明を好みます。\";\n        break;\n      case 5:\n        levelDescription =\n          \"対象読者は非常に経験豊富なプログラミングエキスパートです。詳細な技術的背景やニュアンスまで踏み込んだ説明を期待しています。\";\n        break;\n    }\n    if (levelDescription) promptParts.push(levelDescription);\n  }\n  if (userSettings.userLevelText) {\n    // ユーザーの自由記述レベルは、そのままLLMに伝える情報として追加\n    // ここでサニタイズやバリデーションをかけることも検討できる\n    promptParts.push(\n      `ユーザーからの補足情報（レベル感など）: 「${userSettings.userLevelText}」`\n    );\n  }\n\n  // 追加の指示\n  if (userSettings.additionalPrompt) {\n    // こちらもサニタイズやバリデーションを検討\n    promptParts.push(\n      `ユーザーからの追加の指示: 「${userSettings.additionalPrompt}」`\n    );\n  }\n\n  promptParts.push(\"\\n--- ドキュメント本文 ---\");\n  promptParts.push(textToSummarize);\n  promptParts.push(\"--- 説明開始 ---\");\n\n  const finalPrompt = promptParts.join(\"\\n\");\n  console.log(\"Final prompt to Gemini:\", finalPrompt); // デバッグ用\n\n  // --- Gemini API 呼び出し ---\n  const geminiApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/${GEMINI_MODEL}:generateContent?key=${geminiApiKey}`;\n  const requestBody = { contents: [{ parts: [{ text: finalPrompt }] }] };\n\n  try {\n    const response = await fetch(geminiApiUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestBody),\n    });\n    if (!response.ok) {\n      const errorData = await response\n        .json()\n        .catch(() => ({ message: response.statusText }));\n      return {\n        error: `Gemini APIエラー: ${errorData.error ? errorData.error.message : response.status}`,\n      };\n    }\n    const data = await response.json();\n    if (\n      data.candidates &&\n      data.candidates.length > 0 &&\n      data.candidates[0].content &&\n      data.candidates[0].content.parts &&\n      data.candidates[0].content.parts.length > 0\n    ) {\n      return {\n        summaryMarkdown: data.candidates[0].content.parts[0].text,\n        actualPromptSentToLLM: finalPrompt,\n      };\n    }\n    return { error: \"Gemini APIが期待される要約構造を返しませんでした。\" };\n  } catch (e) {\n    console.error(\"generateSummaryWithGeminiInternal error:\", e);\n    return { error: \"要約生成中にネットワークエラーが発生しました。\" };\n  }\n}\n\n/**\n * 指定されたURLのドキュメント内容を取得し、ユーザー設定に基づいて要約を生成する。\n * @param {string} url - 要約対象のドキュメントURL\n * @param {object} userSettings - ユーザー設定オブジェクト (settings.jsから取得したもの)\n * @returns {Promise<object>} { title?: string, summaryMarkdown?: string, error?: string } 形式のオブジェクト\n */\nexport async function getDocumentSummary(url, userSettings) {\n  const jinaApiKey = getApiKey(\"jina\"); // main.jsがgetSettings()で取得したものを渡す\n  const geminiApiKey = getApiKey(\"gemini\");\n\n  // 1. 本文取得\n  const articleResult = await fetchArticleContentInternal(url, jinaApiKey);\n  if (articleResult.error) {\n    return { error: articleResult.error };\n  }\n  if (!articleResult.content) {\n    return { error: \"記事の本文コンテンツが見つかりませんでした。\" };\n  }\n\n  // 2. 要約生成\n  const summaryResult = await generateSummaryWithGeminiInternal(\n    articleResult.content,\n    userSettings,\n    geminiApiKey\n  );\n  if (summaryResult.error) {\n    return { error: summaryResult.error, title: articleResult.title }; // エラーでもタイトルは返す\n  }\n\n  return {\n    title: articleResult.title,\n    summaryMarkdown: summaryResult.summaryMarkdown,\n    actualPromptSentToLLM: summaryResult.actualPromptSentToLLM,\n  };\n}\n\nexport async function getFollowUpResponse(\n  conversationHistory,\n  newQuestionText\n) {\n  const geminiApiKey = getApiKey(\"gemini\"); // settings.jsから\n  if (!geminiApiKey) {\n    return { error: \"Gemini APIキーが設定されていません。\" };\n  }\n\n  // 既存の会話履歴からtimestampを除外し、新しい質問を追加\n  // conversationHistory は [{role, parts:[{text}]}, ...] の形式を期待\n  const contentsForApi = conversationHistory.map((turn) => ({\n    role: turn.role,\n    parts: turn.parts.map((part) => ({ text: part.text })), // text以外のpartもあれば考慮\n  }));\n  contentsForApi.push({ role: \"user\", parts: [{ text: newQuestionText }] });\n\n  // --- (任意) トークン数管理: ここで contentsForApi が長すぎる場合の処理 ---\n  // 例: const limitedContents = limitConversationTurns(contentsForApi, 10); // 最新10ターン\n  // finalContents = limitedContents;\n\n  // --- プロンプトエンジニアリング (追加質問用) ---\n  // 初回要約時とは異なり、システム指示は conversationHistory の先頭に既にある想定か、\n  // あるいは毎回付与するか。Gemini APIは会話履歴をそのまま渡せば文脈を理解するはず。\n  // 必要なら、userSettingsから得られる指示をここでも考慮して\n  // contentsForApi の末尾 (ユーザーの質問の前) に model ロールでシステムメッセージを挟むこともできる。\n  // 今回はシンプルに会話履歴 + 新しい質問とする。\n\n  const requestBody = {\n    contents: contentsForApi,\n    // generationConfig や safetySettings も userSettings から取得して設定可能\n    generationConfig: {\n      /* ... */\n    },\n    safetySettings: [\n      /* ... */\n    ],\n  };\n  // ログで確認\n  console.log(\n    \"Sending to Gemini (follow-up):\",\n    JSON.stringify(requestBody, null, 2)\n  );\n\n  const geminiApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/${GEMINI_MODEL}:generateContent?key=${geminiApiKey}`;\n  try {\n    const response = await fetch(geminiApiUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestBody),\n    });\n    if (!response.ok) {\n      const errorData = await response\n        .json()\n        .catch(() => ({ message: response.statusText }));\n      return {\n        error: `Gemini APIエラー (追加質問): ${errorData.error ? errorData.error.message : response.status}`,\n      };\n    }\n    const data = await response.json();\n    if (\n      data.candidates &&\n      data.candidates.length > 0 &&\n      data.candidates[0].content &&\n      data.candidates[0].content.parts &&\n      data.candidates[0].content.parts.length > 0\n    ) {\n      // 実際には、新しいユーザーの質問と、モデルの応答の両方を返す必要がある\n      return {\n        userQuestion: newQuestionText, // 保存用\n        modelResponseMarkdown: data.candidates[0].content.parts[0].text,\n      };\n    }\n    return {\n      error: \"Gemini APIが期待される応答構造を返しませんでした (追加質問)。\",\n    };\n  } catch (e) {\n    console.error(\"getFollowUpResponse error:\", e);\n    return {\n      error: \"追加質問の応答生成中にネットワークエラーが発生しました。\",\n    };\n  }\n}\n","const SETTINGS_STORAGE_KEY = \"ExplAInfySettings\";\n\n// モジュール内のプライベートな状態として設定を保持\nlet currentSettings = {\n  jinaApiKey: \"\",\n  geminiApiKey: \"\",\n  userLevel: 1,\n  userLevelText: \"\",\n  additionalPrompt: \"\",\n};\n\n// デフォルト設定\nconst defaultSettings = {\n  jinaApiKey: \"\",\n  geminiApiKey: \"\",\n  userLevel: 1,\n  userLevelText: \"\",\n  additionalPrompt: \"\",\n};\n\n/**\n * アプリケーション起動時にローカルストレージから設定を読み込む。\n * 保存された設定がなければデフォルト値（または空）で初期化。\n */\nexport function initializeSettings() {\n  const savedSettingsString = localStorage.getItem(SETTINGS_STORAGE_KEY);\n  if (savedSettingsString) {\n    try {\n      const savedSettings = JSON.parse(savedSettingsString);\n      currentSettings = { ...defaultSettings, ...savedSettings };\n    } catch (e) {\n      console.error(\"Failed to parse settings from localStorage\", e);\n      currentSettings = { ...defaultSettings };\n    }\n  } else {\n    currentSettings = { ...defaultSettings };\n  }\n  console.log(\"Settings initialized:\", currentSettings);\n}\n\n/**\n * 現在の全ての設定オブジェクトのコピーを返す。\n * @returns {object} 設定オブジェクト\n */\nexport function getSettings() {\n  return { ...currentSettings }; // 外部で直接変更できないようにコピーを返す\n}\n\n/**\n * 特定のAPIキーを取得する。\n * @param {'jina' | 'gemini'} type - 取得したいAPIキーのタイプ\n * @returns {string} APIキー\n */\nexport function getApiKey(type) {\n  if (type === \"jina\") {\n    return currentSettings.jinaApiKey;\n  }\n  if (type === \"gemini\") {\n    return currentSettings.geminiApiKey;\n  }\n  return \"\";\n}\n\n/**\n * 新しい設定オブジェクトを受け取り、現在の設定を更新してローカルストレージに保存する。\n * @param {object} newSettings - 保存する新しい設定オブジェクト\n */\nexport function saveSettings(newSettings) {\n  // newSettings の中身を検証・サニタイズしてもいい\n  currentSettings = { ...currentSettings, ...newSettings }; // 部分的な更新も許容\n  try {\n    localStorage.setItem(SETTINGS_STORAGE_KEY, JSON.stringify(currentSettings));\n    console.log(\"Settings saved:\", currentSettings);\n  } catch (e) {\n    console.error(\"Failed to save settings to localStorage\", e);\n    // ストレージがいっぱいの場合などのエラーハンドリング\n    alert(\"設定の保存に失敗しました。ストレージの空き容量を確認してください。\");\n  }\n}\n\n/**\n * 全ての設定をデフォルトに戻す（ローカルストレージからも削除）\n */\nexport function resetSettings() {\n  currentSettings = { ...defaultSettings };\n  localStorage.removeItem(SETTINGS_STORAGE_KEY);\n  console.log(\"Settings reset to default.\");\n}\n\n// 初期化をこのモジュールが読み込まれた時に行う\ninitializeSettings();\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import DOMPurify from \"dompurify\";\nimport { marked } from \"marked\";\nimport MicroModal from \"micromodal\";\n\n// --- DOM要素のキャッシュ ---\nconst urlInputSection = document.getElementById(\"url-input-section\");\nconst historyListElement = document.getElementById(\"history-list\");\nconst responseSection = document.getElementById(\"response-section\");\nconst responseOutput = document.getElementById(\"response-output\");\nconst responseTitle = document.getElementById(\"response-title\");\nconst logoLink = document.getElementById(\"logo-link\");\n\n// モーダル関連の要素 (モーダル制御とフォーム値設定に使う)\nconst modalGeminiApiKeyInput = document.getElementById(\n  \"modal-gemini-api-key-input\"\n);\nconst modalJinaApiKeyInput = document.getElementById(\n  \"modal-jina-api-key-input\"\n);\nconst modalUserLevelRadios = document.querySelectorAll(\n  'input[name=\"user-level-radio\"]'\n);\nconst modalUserLevelText = document.getElementById(\"user-level-text\");\nconst modalAdditionalPromptInput = document.getElementById(\n  \"modal-additional-prompt-input\"\n);\nconst modalTabs = document.querySelectorAll(\".modal-tabs .tab-item\");\nconst tabContents = document.querySelectorAll(\".modal__content .tab-content\");\n\n// --- UI制御関数 ---\nexport function showPage(pageElementToShow) {\n  urlInputSection.classList.remove(\"active\");\n  responseSection.classList.remove(\"active\");\n\n  if (pageElementToShow) {\n    pageElementToShow.classList.add(\"active\");\n  }\n\n  // ロゴ表示制御もここで行う\n  if (logoLink) {\n    if (pageElementToShow && pageElementToShow.id === \"url-input-section\") {\n      logoLink.classList.add(\"hidden-on-main\");\n    } else {\n      logoLink.classList.remove(\"hidden-on-main\");\n    }\n  }\n}\n\nexport function initializeModal() {\n  MicroModal.init({\n    /* 今は無いけどオプション入れられる */\n  });\n  // モーダル内のタブ切り替えイベントリスナーもここで設定\n  setupModalTabsInternal(); // 内部関数として\n}\n\nfunction setupModalTabsInternal() {\n  modalTabs.forEach((tab) => {\n    tab.addEventListener(\"click\", () => {\n      modalTabs.forEach((t) => t.classList.remove(\"active-tab\"));\n      tabContents.forEach((c) => c.classList.remove(\"active-tab-content\"));\n      tab.classList.add(\"active-tab\");\n      const targetContentId = tab.dataset.tabTarget;\n      document\n        .querySelector(targetContentId)\n        .classList.add(\"active-tab-content\");\n    });\n  });\n}\n\nexport function openSettingsModal() {\n  MicroModal.show(\"modal-settings\");\n}\n\nexport function closeSettingsModal() {\n  MicroModal.close(\"modal-settings\");\n}\nexport function getSettingsFromModalForm() {\n  let selectedUserLevel = \"1\";\n  modalUserLevelRadios.forEach((radio) => {\n    if (radio.checked) selectedUserLevel = radio.value;\n  });\n  return {\n    geminiApiKey: modalGeminiApiKeyInput.value.trim(),\n    jinaApiKey: modalJinaApiKeyInput.value.trim(),\n    userLevel: parseInt(selectedUserLevel, 10),\n    userLevelText: modalUserLevelText.value.trim(),\n    additionalPrompt: modalAdditionalPromptInput.value.trim(),\n  };\n}\nexport function populateModalFormWithSettings(settings) {\n  modalGeminiApiKeyInput.value = settings.geminiApiKey || \"\";\n  modalJinaApiKeyInput.value = settings.jinaApiKey || \"\";\n  modalUserLevelRadios.forEach((radio) => {\n    radio.checked = radio.value === String(settings.userLevel);\n  });\n  modalUserLevelText.value = settings.userLevelText || \"\"; // settings.js のキー名と合わせる\n  if (modalAdditionalPromptInput) {\n    modalAdditionalPromptInput.value = settings.additionalPrompt || \"\";\n  }\n}\nexport function highlightEmptyApiKeysInModal() {\n  if (!modalGeminiApiKeyInput.value.trim()) {\n    modalGeminiApiKeyInput.style.borderColor = \"red\";\n  } else {\n    modalGeminiApiKeyInput.style.borderColor = \"\";\n  }\n  if (!modalJinaApiKeyInput.value.trim()) {\n    modalJinaApiKeyInput.style.borderColor = \"red\";\n  } else {\n    modalJinaApiKeyInput.style.borderColor = \"\";\n  }\n}\nexport function clearApiKeyErrorStylesInModal() {\n  modalGeminiApiKeyInput.style.borderColor = \"\";\n  modalJinaApiKeyInput.style.borderColor = \"\";\n}\n\nexport function initializeTextareaAutoHeight(textareaElement, initialRows) {\n  if (!textareaElement) return;\n  const lineHeight = parseFloat(getComputedStyle(textareaElement).lineHeight);\n  const initialHeight = lineHeight * initialRows;\n  textareaElement.style.height = `${initialHeight}px`;\n\n  textareaElement.addEventListener(\"input\", () => {\n    textareaElement.style.height = \"auto\";\n    let newHeight = textareaElement.scrollHeight;\n\n    if (newHeight > initialHeight) {\n      textareaElement.classList.add(\"expanded\");\n    } else {\n      textareaElement.classList.remove(\"expanded\");\n    }\n    textareaElement.style.height = `${newHeight}px`;\n  });\n}\nexport function updateResponseTitle(titleText) {\n  if (responseTitle) {\n    // responseTitle要素がHTMLに存在することを確認\n    responseTitle.textContent = titleText;\n  } else {\n    console.warn(\"#response-title element not found.\");\n  }\n}\n\nexport function displayLoadingMessage(message = \"<p>処理中...</p>\") {\n  responseOutput.innerHTML = message;\n}\n\nexport function displayErrorMessage(errorMessageText) {\n  responseOutput.innerHTML = `<p style=\"color: red;\">エラー: ${errorMessageText}</p>`;\n}\n\n// アプリケーション起動時に行うUI関連の初期化 (main.js から呼び出す)\nexport function initializeUI() {\n  initializeModal();\n  // 他のUI初期化があればここに\n}\n\nexport function renderHistoryList(sessionSummaries) {\n  if (!historyListElement) return;\n  if (!sessionSummaries || sessionSummaries.length === 0) {\n    historyListElement.innerHTML = \"<li>履歴はありません。</li>\";\n    return;\n  }\n\n  historyListElement.innerHTML = sessionSummaries\n    .map(\n      (summary) => `\n        <li>\n            <a href=\"#\" data-session-id=\"${summary.id}\">\n                <span class=\"history-title\">${summary.title || \"無題のセッション\"}</span>\n                <span class=\"history-timestamp\">${new Date(summary.lastUpdatedAt).toLocaleString()}</span>\n            </a>\n        </li>\n    `\n    )\n    .join(\"\");\n}\nexport function renderConversationTurns(turnsArray) {\n  // originalUrlを引数で受け取る\n  if (!turnsArray || turnsArray.length === 0) {\n    responseOutput.innerHTML = \"<p>まだ会話がありません。</p>\";\n    return;\n  }\n\n  let conversationHtml = \"\";\n  turnsArray.forEach((turn, index) => {\n    // forEachの第2引数でインデックスを取得\n    if (\n      turn.role &&\n      turn.parts &&\n      turn.parts.length > 0 &&\n      turn.parts[0].text\n    ) {\n      const textContent = turn.parts[0].text;\n      let turnHtml = \"\";\n      let displayContent = \"\"; // 表示用のコンテンツ\n\n      if (turn.role === \"user\") {\n        if (index === 0) {\n          // finalPromptそのまま出すと長すぎる\n          displayContent = \"提示したドキュメントについて説明してください。\";\n          const sanitizedText = DOMPurify.sanitize(\n            displayContent.replace(/\\n/g, \"<br>\")\n          );\n          turnHtml = `<div class=\"chat-message user-message initial-request\"><div class=\"message-bubble\">${sanitizedText}</div></div>`;\n        } else {\n          // 2ターン目以降のユーザーの質問はそのまま表示\n          displayContent = textContent;\n          const sanitizedText = DOMPurify.sanitize(\n            displayContent.replace(/\\n/g, \"<br>\")\n          );\n          turnHtml = `<div class=\"chat-message user-message\"><div class=\"message-bubble\">${sanitizedText}</div></div>`;\n        }\n      } else if (turn.role === \"model\") {\n        // モデルの応答はマークダウンとして処理\n        try {\n          const dirtyHtml = marked.parse(textContent);\n          const cleanHtml = DOMPurify.sanitize(dirtyHtml);\n          turnHtml = `<div class=\"chat-message model-message\"><div class=\"message-bubble\">${cleanHtml}</div></div>`;\n        } catch (e) {\n          console.error(\n            \"Markdown parsing/sanitizing error for model message:\",\n            e\n          );\n          const sanitizedText = DOMPurify.sanitize(\n            textContent.replace(/\\n/g, \"<br>\")\n          );\n          turnHtml = `<div class=\"chat-message model-message error-rendering\"><div class=\"message-bubble\">表示エラー: ${sanitizedText}</div></div>`;\n        }\n      }\n      conversationHtml += turnHtml;\n    }\n  });\n  responseOutput.innerHTML = conversationHtml;\n}\n",null,"const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\nconst arraySplice = unapply(Array.prototype.splice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply<T>(\n  func: (thisArg: any, ...args: any[]) => T\n): (thisArg: any, ...args: any[]) => T {\n  return (thisArg: any, ...args: any[]): T => {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct<T>(func: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]): T => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(\n  set: Record<string, any>,\n  array: readonly any[],\n  transformCaseFunc: ReturnType<typeof unapply<string>> = stringToLowerCase\n): Record<string, any> {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          (array as any[])[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray<T>(array: T[]): Array<T | null> {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone<T extends Record<string, any>>(object: T): T {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter<T extends Record<string, any>>(\n  object: T,\n  prop: string\n): ReturnType<typeof unapply<any>> | (() => null) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(): null {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  arraySplice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n] as const);\n\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n] as const);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n] as const);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n] as const);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n] as const);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n] as const);\n\nexport const text = freeze(['#text'] as const);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'popover',\n  'popovertarget',\n  'popovertargetaction',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'wrap',\n  'xmlns',\n  'slot',\n] as const);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'amplitude',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'exponent',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'intercept',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'slope',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'tablevalues',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n] as const);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n] as const);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n","/* eslint-disable @typescript-eslint/indent */\n\nimport type { TrustedHTML, TrustedTypesWindow } from 'trusted-types/lib';\nimport type { Config, UseProfilesConfig } from './config';\nimport * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySplice,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nexport type { Config } from './config';\n\ndeclare const VERSION: string;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5, // Deprecated\n  entityNode: 6, // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12, // Deprecated\n};\n\nconst getGlobal = function (): WindowLike {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (\n  trustedTypes: TrustedTypePolicyFactory,\n  purifyHostElement: HTMLScriptElement\n) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nconst _createHooksMap = function (): HooksMap {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: [],\n  };\n};\n\nfunction createDOMPurify(window: WindowLike = getGlobal()): DOMPurify {\n  const DOMPurify: DOMPurify = (root: WindowLike) => createDOMPurify(root);\n\n  DOMPurify.version = VERSION;\n\n  DOMPurify.removed = [];\n\n  if (\n    !window ||\n    !window.document ||\n    window.document.nodeType !== NODE_TYPE.document ||\n    !window.Element\n  ) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript: HTMLScriptElement =\n    originalDocument.currentScript as HTMLScriptElement;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || (window as any).MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = _createHooksMap();\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES: UseProfilesConfig | false = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE: null | DOMParserSupportedType = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc: null | Parameters<typeof addToSet>[2] = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG: Config | null = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (\n    testValue: unknown\n  ): testValue is Function | RegExp {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg: Config = {}): void {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n          cfg.ADD_URI_SAFE_ATTR,\n          transformCaseFunc\n        )\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS),\n          cfg.ADD_DATA_URI_TAGS,\n          transformCaseFunc\n        )\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS =\n      cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS =\n      cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element: Element): boolean {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function (node: Node): void {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function (name: string, element: Element): void {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element,\n      });\n    }\n\n    element.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty: string): Document {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function (root: Node): NodeIterator {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION |\n        NodeFilter.SHOW_CDATA_SECTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function (element: Element): boolean {\n    return (\n      element instanceof HTMLFormElement &&\n      (typeof element.nodeName !== 'string' ||\n        typeof element.textContent !== 'string' ||\n        typeof element.removeChild !== 'function' ||\n        !(element.attributes instanceof NamedNodeMap) ||\n        typeof element.removeAttribute !== 'function' ||\n        typeof element.setAttribute !== 'function' ||\n        typeof element.namespaceURI !== 'string' ||\n        typeof element.insertBefore !== 'function' ||\n        typeof element.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function (value: unknown): value is Node {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n\n  function _executeHooks<\n    T extends\n      | NodeHook\n      | ElementHook\n      | DocumentFragmentHook\n      | UponSanitizeElementHook\n      | UponSanitizeAttributeHook\n  >(hooks: T[], currentNode: Parameters<T>[0], data: Parameters<T>[1]): void {\n    arrayForEach(hooks, (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode: any): boolean {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w!]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w!]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.nodeType === NODE_TYPE.comment &&\n      regExpTest(/<[/\\w]/g, currentNode.data)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (\n    lcTag: string,\n    lcName: string,\n    value: string\n  ): boolean {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName: string): RegExpMatchArray {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode: Element): void {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment: DocumentFragment): void {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if ((dirty as Node).nodeName) {\n        const tagName = transformCaseFunc((dirty as Node).nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (\n        importedNode.nodeType === NODE_TYPE.element &&\n        importedNode.nodeName === 'BODY'\n      ) {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n\n      return index === -1\n        ? undefined\n        : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n\n    return arrayPop(hooks[entryPoint]);\n  };\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n\nexport interface DOMPurify {\n  /**\n   * Creates a DOMPurify instance using the given window-like object. Defaults to `window`.\n   */\n  (root?: WindowLike): DOMPurify;\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  version: string;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  removed: Array<RemovedElement | RemovedAttribute>;\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  isSupported: boolean;\n\n  /**\n   * Set the configuration once.\n   *\n   * @param cfg configuration object\n   */\n  setConfig(cfg?: Config): void;\n\n  /**\n   * Removes the configuration.\n   */\n  clearConfig(): void;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized TrustedHTML.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_TRUSTED_TYPE: true }\n  ): TrustedHTML;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: Node, cfg: Config & { IN_PLACE: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: string | Node, cfg: Config & { RETURN_DOM: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized document fragment.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_DOM_FRAGMENT: true }\n  ): DocumentFragment;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized string.\n   */\n  sanitize(dirty: string | Node, cfg?: Config): string;\n\n  /**\n   * Checks if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   *\n   * @param tag Tag name of containing element.\n   * @param attr Attribute name.\n   * @param value Attribute value.\n   * @returns Returns true if `value` is valid. Otherwise, returns false.\n   */\n  isValidAttribute(tag: string, attr: string, value: string): boolean;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: BasicHookName, hookFunction: NodeHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: ElementHookName, hookFunction: ElementHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction: DocumentFragmentHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction: UponSanitizeElementHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction: UponSanitizeAttributeHook\n  ): void;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: BasicHookName,\n    hookFunction?: NodeHook\n  ): NodeHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: ElementHookName,\n    hookFunction?: ElementHook\n  ): ElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction?: DocumentFragmentHook\n  ): DocumentFragmentHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction?: UponSanitizeElementHook\n  ): UponSanitizeElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction?: UponSanitizeAttributeHook\n  ): UponSanitizeAttributeHook | undefined;\n\n  /**\n   * Removes all DOMPurify hooks at a given entryPoint\n   *\n   * @param entryPoint entry point for the hooks to remove\n   */\n  removeHooks(entryPoint: HookName): void;\n\n  /**\n   * Removes all DOMPurify hooks.\n   */\n  removeAllHooks(): void;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedElement {\n  /**\n   * The element that was removed.\n   */\n  element: Node;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedAttribute {\n  /**\n   * The attribute that was removed.\n   */\n  attribute: Attr | null;\n\n  /**\n   * The element that the attribute was removed.\n   */\n  from: Node;\n}\n\ntype BasicHookName =\n  | 'beforeSanitizeElements'\n  | 'afterSanitizeElements'\n  | 'uponSanitizeShadowNode';\ntype ElementHookName = 'beforeSanitizeAttributes' | 'afterSanitizeAttributes';\ntype DocumentFragmentHookName =\n  | 'beforeSanitizeShadowDOM'\n  | 'afterSanitizeShadowDOM';\ntype UponSanitizeElementHookName = 'uponSanitizeElement';\ntype UponSanitizeAttributeHookName = 'uponSanitizeAttribute';\n\ninterface HooksMap {\n  beforeSanitizeElements: NodeHook[];\n  afterSanitizeElements: NodeHook[];\n  beforeSanitizeShadowDOM: DocumentFragmentHook[];\n  uponSanitizeShadowNode: NodeHook[];\n  afterSanitizeShadowDOM: DocumentFragmentHook[];\n  beforeSanitizeAttributes: ElementHook[];\n  afterSanitizeAttributes: ElementHook[];\n  uponSanitizeElement: UponSanitizeElementHook[];\n  uponSanitizeAttribute: UponSanitizeAttributeHook[];\n}\n\nexport type HookName =\n  | BasicHookName\n  | ElementHookName\n  | DocumentFragmentHookName\n  | UponSanitizeElementHookName\n  | UponSanitizeAttributeHookName;\n\nexport type NodeHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type ElementHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type DocumentFragmentHook = (\n  this: DOMPurify,\n  currentNode: DocumentFragment,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type UponSanitizeElementHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: UponSanitizeElementHookEvent,\n  config: Config\n) => void;\n\nexport type UponSanitizeAttributeHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: UponSanitizeAttributeHookEvent,\n  config: Config\n) => void;\n\nexport interface UponSanitizeElementHookEvent {\n  tagName: string;\n  allowedTags: Record<string, boolean>;\n}\n\nexport interface UponSanitizeAttributeHookEvent {\n  attrName: string;\n  attrValue: string;\n  keepAttr: boolean;\n  allowedAttributes: Record<string, boolean>;\n  forceKeepAttr: boolean | undefined;\n}\n\n/**\n * A `Window`-like object containing the properties and types that DOMPurify requires.\n */\nexport type WindowLike = Pick<\n  typeof globalThis,\n  | 'DocumentFragment'\n  | 'HTMLTemplateElement'\n  | 'Node'\n  | 'Element'\n  | 'NodeFilter'\n  | 'NamedNodeMap'\n  | 'HTMLFormElement'\n  | 'DOMParser'\n> & {\n  document?: Document;\n  MozNamedAttrMap?: typeof window.NamedNodeMap;\n} & Pick<TrustedTypesWindow, 'trustedTypes'>;\n",null,"/**\n * Gets the original marked default options.\n */\nexport function _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nexport let _defaults = _getDefaults();\nexport function changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n","const noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nexport const other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nexport const block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nexport const inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n","import { other } from './rules.ts';\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nexport function escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nexport function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(other.unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nexport function cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nexport function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nexport function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    if (level > 0) {\n        return -2;\n    }\n    return -1;\n}\n","import { _defaults } from './defaults.ts';\nimport { rtrim, splitCells, findClosingBracket, } from './helpers.ts';\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    lexer.state.inLink = true;\n    const token = {\n        type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n        raw,\n        href,\n        title,\n        text,\n        tokens: lexer.inlineTokens(text),\n    };\n    lexer.state.inLink = false;\n    return token;\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex === -2) {\n                    // more open parens than closed\n                    return;\n                }\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n","import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\n/**\n * Block Lexer\n */\nexport class _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { cleanUrl, escape, } from './helpers.ts';\nimport { other } from './rules.ts';\n/**\n * Renderer\n */\nexport class _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text, tokens }) {\n        if (tokens) {\n            text = this.parser.parseInline(tokens, this.parser.textRenderer);\n        }\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n","import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nexport class _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n","import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nexport class Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n","import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport { _getDefaults, changeDefaults, _defaults, } from './defaults.ts';\nconst markedInstance = new Marked();\nexport function marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\n","function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}var n,i,a,r,s,l=(n=[\"a[href]\",\"area[href]\",'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\"select:not([disabled]):not([aria-hidden])\",\"textarea:not([disabled]):not([aria-hidden])\",\"button:not([disabled]):not([aria-hidden])\",\"iframe\",\"object\",\"embed\",\"[contenteditable]\",'[tabindex]:not([tabindex^=\"-\"])'],i=function(){function o(e){var n=e.targetModal,i=e.triggers,a=void 0===i?[]:i,r=e.onShow,s=void 0===r?function(){}:r,l=e.onClose,c=void 0===l?function(){}:l,d=e.openTrigger,u=void 0===d?\"data-micromodal-trigger\":d,f=e.closeTrigger,h=void 0===f?\"data-micromodal-close\":f,v=e.openClass,g=void 0===v?\"is-open\":v,m=e.disableScroll,b=void 0!==m&&m,y=e.disableFocus,p=void 0!==y&&y,w=e.awaitCloseAnimation,E=void 0!==w&&w,k=e.awaitOpenAnimation,M=void 0!==k&&k,A=e.debugMode,C=void 0!==A&&A;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,o),this.modal=\"string\"==typeof n?document.getElementById(n):n,this.config={debugMode:C,disableScroll:b,openTrigger:u,closeTrigger:h,openClass:g,onShow:s,onClose:c,awaitCloseAnimation:E,awaitOpenAnimation:M,disableFocus:p},a.length>0&&this.registerTriggers.apply(this,t(a)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}var i,a,r;return i=o,(a=[{key:\"registerTriggers\",value:function(){for(var e=this,t=arguments.length,o=new Array(t),n=0;n<t;n++)o[n]=arguments[n];o.filter(Boolean).forEach((function(t){t.addEventListener(\"click\",(function(t){return e.showModal(t)}))}))}},{key:\"showModal\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.activeElement=document.activeElement,this.modal.setAttribute(\"aria-hidden\",\"false\"),this.modal.classList.add(this.config.openClass),this.scrollBehaviour(\"disable\"),this.addEventListeners(),this.config.awaitOpenAnimation){var o=function t(){e.modal.removeEventListener(\"animationend\",t,!1),e.setFocusToFirstNode()};this.modal.addEventListener(\"animationend\",o,!1)}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement,t)}},{key:\"closeModal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.modal;if(this.modal.setAttribute(\"aria-hidden\",\"true\"),this.removeEventListeners(),this.scrollBehaviour(\"enable\"),this.activeElement&&this.activeElement.focus&&this.activeElement.focus(),this.config.onClose(this.modal,this.activeElement,e),this.config.awaitCloseAnimation){var o=this.config.openClass;this.modal.addEventListener(\"animationend\",(function e(){t.classList.remove(o),t.removeEventListener(\"animationend\",e,!1)}),!1)}else t.classList.remove(this.config.openClass)}},{key:\"closeModalByIdOrElement\",value:function(e){this.modal=\"string\"==typeof e?document.getElementById(e):e,this.modal&&this.closeModal()}},{key:\"scrollBehaviour\",value:function(e){if(this.config.disableScroll){var t=document.querySelector(\"body\");switch(e){case\"enable\":Object.assign(t.style,{overflow:\"\"});break;case\"disable\":Object.assign(t.style,{overflow:\"hidden\"})}}}},{key:\"addEventListeners\",value:function(){this.modal.addEventListener(\"touchstart\",this.onClick),this.modal.addEventListener(\"click\",this.onClick),document.addEventListener(\"keydown\",this.onKeydown)}},{key:\"removeEventListeners\",value:function(){this.modal.removeEventListener(\"touchstart\",this.onClick),this.modal.removeEventListener(\"click\",this.onClick),document.removeEventListener(\"keydown\",this.onKeydown)}},{key:\"onClick\",value:function(e){(e.target.hasAttribute(this.config.closeTrigger)||e.target.parentNode.hasAttribute(this.config.closeTrigger))&&(e.preventDefault(),e.stopPropagation(),this.closeModal(e))}},{key:\"onKeydown\",value:function(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.retainFocus(e)}},{key:\"getFocusableNodes\",value:function(){var e=this.modal.querySelectorAll(n);return Array.apply(void 0,t(e))}},{key:\"setFocusToFirstNode\",value:function(){var e=this;if(!this.config.disableFocus){var t=this.getFocusableNodes();if(0!==t.length){var o=t.filter((function(t){return!t.hasAttribute(e.config.closeTrigger)}));o.length>0&&o[0].focus(),0===o.length&&t[0].focus()}}}},{key:\"retainFocus\",value:function(e){var t=this.getFocusableNodes();if(0!==t.length)if(t=t.filter((function(e){return null!==e.offsetParent})),this.modal.contains(document.activeElement)){var o=t.indexOf(document.activeElement);e.shiftKey&&0===o&&(t[t.length-1].focus(),e.preventDefault()),!e.shiftKey&&t.length>0&&o===t.length-1&&(t[0].focus(),e.preventDefault())}else t[0].focus()}}])&&e(i.prototype,a),r&&e(i,r),o}(),a=null,r=function(e){if(\"string\"==typeof id?!document.getElementById(e):!e)return console.warn(\"MicroModal: ❗Seems like you have missed %c'\".concat(e,\"'\"),\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"ID somewhere in your code. Refer example below to resolve it.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<div class=\"modal\" id=\"'.concat(e,'\"></div>')),!1},s=function(e,t){if(function(e){e.length<=0&&(console.warn(\"MicroModal: ❗Please specify at least one %c'micromodal-trigger'\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",\"data attribute.\"),console.warn(\"%cExample:\",\"background-color: #f8f9fa;color: #50596c;font-weight: bold;\",'<a href=\"#\" data-micromodal-trigger=\"my-modal\"></a>'))}(e),!t)return!0;for(var o in t)r(o);return!0},{init:function(e){var o=Object.assign({},{openTrigger:\"data-micromodal-trigger\"},e),n=t(document.querySelectorAll(\"[\".concat(o.openTrigger,\"]\"))),r=function(e,t){var o=[];return e.forEach((function(e){var n=e.attributes[t].value;void 0===o[n]&&(o[n]=[]),o[n].push(e)})),o}(n,o.openTrigger);if(!0!==o.debugMode||!1!==s(n,r))for(var l in r){var c=r[l];o.targetModal=l,o.triggers=t(c),a=new i(o)}},show:function(e,t){var o=t||{};o.targetModal=e,!0===o.debugMode&&!1===r(e)||(a&&a.removeEventListeners(),(a=new i(o)).showModal())},close:function(e){e?a.closeModalByIdOrElement(e):a.closeModal()}});\"undefined\"!=typeof window&&(window.MicroModal=l);export default l;\n","import { openDB } from \"idb\";\n\nconst DB_NAME = \"ExplAInfyDB\";\nconst DB_VERSION = 1;\nconst SESSIONS_STORE_NAME = \"sessions\";\n\nlet dbPromise = null;\n\nfunction getDB() {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, {\n      upgrade(db, oldVersion, newVersion, _transaction) {\n        console.log(`Upgrading DB from version ${oldVersion} to ${newVersion}`);\n        if (!db.objectStoreNames.contains(SESSIONS_STORE_NAME)) {\n          const store = db.createObjectStore(SESSIONS_STORE_NAME, {\n            keyPath: \"id\", // セッションIDを主キーとする\n          });\n          // 履歴一覧のソート用にインデックスを作成 (例: 最終更新日時)\n          store.createIndex(\"lastUpdatedAt\", \"lastUpdatedAt\");\n          console.log(`Object store ${SESSIONS_STORE_NAME} created.`);\n        }\n        // ここらへんよくわからんけど、スキーマの変更する場合は頑張って\n      },\n    });\n  }\n  return dbPromise;\n}\n\n/**\n * 新しい会話セッション、または更新されたセッションを保存する。\n * idbのputは、キーが存在すれば更新、なければ追加を行う。\n * @param {object} sessionData - 保存するセッションデータ\n * @returns {Promise<IDBValidKey>} 保存されたアイテムのキー (sessionId)\n */\nexport async function saveOrUpdateSession(sessionData) {\n  if (!sessionData || !sessionData.id) {\n    throw new Error(\"Session data must have an id.\");\n  }\n  // 最終更新日時を自動で設定\n  sessionData.lastUpdatedAt = Date.now();\n\n  const db = await getDB();\n  const tx = db.transaction(SESSIONS_STORE_NAME, \"readwrite\");\n  const store = tx.objectStore(SESSIONS_STORE_NAME);\n  const result = await store.put(sessionData);\n  await tx.done;\n  console.log(\"Session saved/updated:\", sessionData.id);\n  return result;\n}\n\n/**\n * 指定されたIDのセッションを取得する。\n * @param {string} sessionId\n * @returns {Promise<object|undefined>} セッションデータ、または見つからなければ undefined\n */\nexport async function getSession(sessionId) {\n  const db = await getDB();\n  const tx = db.transaction(SESSIONS_STORE_NAME, \"readonly\");\n  const store = tx.objectStore(SESSIONS_STORE_NAME);\n  const session = await store.get(sessionId);\n  await tx.done;\n  return session;\n}\n\n/**\n * 全てのセッションの概要（ID、タイトル、最終更新日時など）を最終更新日時の降順で取得する。\n * @returns {Promise<Array<object>>} セッション概要の配列\n */\nexport async function getAllSessionSummaries() {\n  const db = await getDB();\n  const tx = db.transaction(SESSIONS_STORE_NAME, \"readonly\");\n  const store = tx.objectStore(SESSIONS_STORE_NAME);\n  const index = store.index(\"lastUpdatedAt\"); // インデックスを使用\n  const allSessions = await index.getAll(); // lastUpdatedAt でソートされた状態で取得\n  allSessions.reverse(); // 降順にする (もしindexが昇順なら)\n\n  return allSessions.map((session) => ({\n    // 必要な情報だけを抽出\n    id: session.id,\n    title: session.originalTitle,\n    lastUpdatedAt: session.lastUpdatedAt,\n    // turns は重いから含めない\n  }));\n}\n\n/**\n * 指定されたIDのセッションを削除する。\n * @param {string} sessionId\n * @returns {Promise<void>}\n */\nexport async function deleteSession(sessionId) {\n  const db = await getDB();\n  const tx = db.transaction(SESSIONS_STORE_NAME, \"readwrite\");\n  const store = tx.objectStore(SESSIONS_STORE_NAME);\n  await store.delete(sessionId);\n  await tx.done;\n  console.log(\"Session deleted:\", sessionId);\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","push","arraySplice","splice","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","lastIndex","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","element","lcElement","cleanArray","index","isPropertyExist","clone","object","newObject","property","value","isArray","constructor","lookupGetter","prop","desc","get","fallbackValue","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","document","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","console","warn","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","undefined","DOMPurify","root","version","VERSION","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","removeChild","_removeAttribute","name","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","i","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","_defaults","escape"],"version":3,"file":"explainfy-project.1fcc916e.js.map","sourceRoot":"/__parcel_source_root/"}