{"mappings":"AACA;;;;;;;AAOA;;;;;;;AASA;;;;;;;;;;AAYA;;;;;;;;;AASA;;;;AAGA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;;;;;;AAQA;;;;;;AAOA;;;;;;;;;;AAWA;;;;;AAKA;;;;AAGA;;;;AAIA;;;;;;;;AAQA;;;;;;AAKA;;;;;;;;;;;AAUA;;;;;AAKA;;;;;;;;;;;;AAaA;;;;;;;AAMA;;;;;AAMA;;;;;;AAMA;;;;;;;;;AAQA;;;;AAIA;;;;;;AAMA;;;;;;;;;;;;;;;AAgBA;;;;;;AAOA;;;;;;;;;;;;;;;;;AAgBA;;;;AAGA;;;;;;AAKA;;;;;;;AAQA;;;;;;AAOA;;;;AAIA;;;;;;;AAMA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAWA;;;;;;;AAQA;;;;AAGA;;;;;;;;;;AAcA;;;;AAGA;;;;AAGA;;;;AAGA;;;;;;AAKA;;;;;;AAMA;;;;AAOA;;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;;;AAQA;;;;AAGA;;;;AAGA;;;;;;;AAMA;;;;;;;;AAOA;;;;;;;;AAOA;;;;;AAKA;;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAKA;;;;;;;;;;AAaA;;;;;;;;;;;AAYA;;;;;;AAMA;;;;;;;;;;;AAWA;;;;AAGA;;;;;;AAOA;;;;;AAKA;;;;AAMA;;;;;;;AAOA;;;;;;;;;;;;;;;;AAoBA;;;;;AAMA;;;;;AAMA;;;;;;AAOA;;;;;AAMA;;;;AAKA;;;;;;;AAOA;;;;;AAKA;;;;;;AAMA;;;;;AAKA;;;;;AAKA;;;;;;;AAOA;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;AAMA;;;;;;;;;AAQA;;;;AAGA;;;;;;;;;AAQA","sources":["src/style.css"],"sourcesContent":["/* 基本的なリセットとページ全体のスタイル */\n:root {\n  --app-header-height: 60px;\n  --sidebar-width: 16%; /* サイドバーの幅 */\n  --response-title-height: auto; /* タイトルは内容に合わせる */\n  --chat-input-area-min-height: 40px; /* 入力エリアの最小高さ */\n}\n\nbody {\n  font-family:\n    -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial,\n    sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  margin: 0;\n  background-color: #f6f8fc;\n  color: #333;\n}\n\n.app-shell {\n  display: grid; /* Gridコンテナにする */\n  grid-template-rows: var(--app-header-height) 1fr; /* ヘッダー固定高さ、残りがボディ */\n  grid-template-areas: /* エリア名を定義 (任意だが可読性向上) */\n    \"appheader\"\n    \"appbody\";\n  height: 100vh; /* ビューポート全体の高さ */\n  width: 100vw; /* ビューポート全体の幅 */\n  overflow: hidden; /* ページ全体のスクロールを防ぐ */\n}\n\n/* ヘッダースタイル */\n.app-header {\n  grid-area: appheader; /* Gridエリア名を割り当て */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 25px;\n  box-sizing: border-box;\n}\n\n.app-logo-link {\n  text-decoration: none;\n}\n.app-logo-link.hidden-on-main {\n  visibility: hidden;\n}\n\n.app-logo {\n  font-size: 1.8em;\n  font-weight: 600;\n  margin: 0;\n  color: #24292e;\n}\n\n.app-logo .ai-red {\n  color: #cb2431;\n}\n\n#setting-button {\n  width: 28px;\n  height: 28px;\n  cursor: pointer;\n  border: none;\n  background: none;\n  padding: 0;\n}\n#setting-button img {\n  display: block; /* 余計なスペースを消す */\n  width: 100%;\n  height: 100%;\n}\n\n/* メインコンテンツエリアのレイアウト */\n.app-body-container {\n  grid-area: appbody; /* Gridエリア名を割り当て */\n  display: grid; /* これもGridコンテナにする */\n  grid-template-columns: var(--sidebar-width) 1fr var(--sidebar-width); /* 左、中央、右 */\n  /* grid-template-rows: 1fr; 暗黙的に1行で、高さは親エリアに依存 */\n  grid-template-areas: \"leftsidebar maincontent rightsidebar\";\n  overflow: hidden; /* 内部のGridアイテムがはみ出さないように */\n  gap: 0px; /* グリッドアイテム間の隙間 (必要に応じて調整) */\n  background-color: #f6f8fc; /* ボディコンテナの背景色 */\n}\n\n.sidebar {\n  padding: 20px;\n  overflow-y: auto; /* サイドバー内が長くなる場合はスクロール */\n}\n\n.left-sidebar {\n  grid-area: leftsidebar;\n}\n.right-sidebar {\n  grid-area: rightsidebar;\n}\n\n.left-sidebar h2,\n.right-sidebar h2 {\n  margin-top: 0;\n  font-size: 1.1em;\n  color: #586069;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e1e4e8;\n}\n#history-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n#history-list li a {\n  display: block;\n  padding: 8px 0;\n  text-decoration: none;\n  color: #0366d6;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 0.9em;\n}\n#history-list li a:hover {\n  text-decoration: underline;\n  background-color: rgba(200, 200, 200, 0.1);\n}\n\n.main-content-column {\n  grid-area: maincontent;\n  background-color: #ffffff;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 20px 5px 20px; /* 内側の余白 */\n  overflow: hidden; /* 子要素がはみ出さないように */\n  margin-bottom: 5px;\n  border-radius: 15px;\n}\n\n/* ページセクションの基本スタイル */\n.page-section {\n  display: none;\n  width: 100%;\n  box-sizing: border-box;\n  flex-grow: 1;\n}\n.page-section.active {\n  display: flex;\n  flex-direction: column; /* 子要素を縦に積む */\n}\n\n/* URL入力画面のスタイル */\n#url-input-section.active {\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.url-input-title {\n  font-size: 3.2em;\n  font-weight: 600;\n  text-align: center;\n  margin-top: -20vh;\n  margin-bottom: 40px; /* フォームとの間隔 */\n  color: #24292e;\n}\n.url-input-title .ai-red {\n  color: #cb2431;\n}\n\n.input-form-container {\n  position: relative;\n  width: 80%;\n  max-width: 700px; /* 最大幅を少し広げる */\n}\n\n.url-textarea {\n  width: 100%;\n  min-height: calc(1.5em * 2 + 24px); /* line-height * 行数 + padding上下 */\n  padding: 12px 60px 12px 30px; /* 右に送信ボタンのスペース、左右に十分な丸み用スペース */\n  border-radius: 30px;\n  border: 1px solid #d1d5da;\n  font-size: 1em;\n  line-height: 1.5;\n  box-sizing: border-box;\n  resize: none;\n  overflow-y: auto;\n  max-height: 12em;\n  transition:\n    border-radius 0.2s ease-in-out,\n    box-shadow 0.2s ease-in-out;\n}\n.url-textarea:focus {\n  outline: none;\n  border-color: #0366d6;\n  box-shadow: 0 0 0 3px rgba(3, 102, 214, 0.3);\n}\n\n/* 送信ボタンの共通スタイル */\n.custom-submit-button {\n  display: inline-flex;\n  align-items: center;\n  background-color: #0366d6; /* GitHub風の青 */\n  color: white;\n  border: 2px solid #0366d6;\n  padding: 0;\n  border-radius: 20px; /* ボタンの高さに合わせて調整 */\n  cursor: pointer;\n  font-size: 0.9em;\n  overflow: hidden;\n  transition: background-color 0.2s ease;\n  height: 40px; /* 固定の高さ */\n  min-width: 100px;\n  user-select: none; /* テキスト選択不可に */\n}\n.custom-submit-button:hover {\n  background-color: #005cc5;\n}\n.custom-submit-button .submit-text {\n  padding: 0 5px 0 15px;\n  font-weight: 500;\n  line-height: 40px;\n}\n.custom-submit-button .shortcut-key {\n  padding: 0 15px 0 0px;\n  font-size: 0.85em;\n  color: rgba(255, 255, 255, 0.8);\n  line-height: 40px;\n}\n\n/* メインページの送信ボタン位置 */\n#url-input-section .custom-submit-button {\n  position: absolute;\n  right: 7px;\n  bottom: 15px; /* textareaのpaddingやborderを考慮 */\n}\n\n/* 応答画面のスタイル */\n#response-section.active {\n  overflow: hidden;\n}\n\n.response-content-wrapper {\n  flex-grow: 1; /* 残りのスペースを最大限使う */\n  overflow-y: auto; /* ここがスクロールする */\n  padding-bottom: 10px; /* 下の入力欄との間に少し余白 */\n  min-height: 0;\n}\n#response-section h2 {\n  /* タイトル部分 */\n  margin: 0 0 20px 0; /* 上マージンを0に、下マージンを調整 */\n  padding-bottom: 10px;\n  border-bottom: 1px solid #e1e4e8;\n  font-size: 1.6em;\n  color: #24292e;\n  flex-shrink: 0; /* 縮まない */\n}\n\n.fixed-bottom-input {\n  /* チャット入力エリア */\n  flex-shrink: 0;\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  padding: 6px 0; /* 左右のpaddingは .main-content-column に任せる */\n  min-height: var(--chat-input-area-min-height); /* 最小高さを保証 */\n}\n\n#additional-question-input.url-textarea {\n  /* メインページのスタイルを継承 */\n  flex-grow: 1;\n  min-height: calc(1.5em * 2 + 22px); /* 2行分の初期高さ */\n  border-radius: 22px; /* 高さに合わせて調整 */\n  margin-right: 10px;\n  margin-left: 10px;\n  padding-right: 50px; /* 送信ボタンのスペース */\n}\n\n/* 応答画面の送信ボタン位置 */\n#response-section .custom-submit-button {\n  margin-left: auto; /* 右寄せにする場合 (またはtextareaがflex-growなので不要かも) */\n  position: absolute; /* やっぱりabsoluteの方が制御しやすいかも */\n  right: 28px; /* fixed-bottom-input の padding を考慮 */\n  bottom: 19px; /* fixed-bottom-input の padding を考慮 */\n}\n\n/* マークダウン表示用スタイル */\n#response-output {\n  max-width: 100%;\n}\n#response-output h1, /* マークダウン内のh1-h6 */\n#response-output h2,\n#response-output h3,\n#response-output h4,\n#response-output h5,\n#response-output h6 {\n  margin-top: 1.5em;\n  margin-bottom: 0.8em;\n  font-weight: 600;\n  line-height: 1.25;\n  color: #24292e;\n  padding-bottom: 0.3em;\n  border-bottom: 1px solid #eaecef;\n}\n#response-output h1 {\n  font-size: 2em;\n}\n#response-output h2 {\n  font-size: 1.7em;\n} /* response-section h2 と区別 */\n#response-output h3 {\n  font-size: 1.4em;\n}\n#response-output p {\n  line-height: 1.6;\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n#response-output ul,\n#response-output ol {\n  margin-top: 0;\n  margin-bottom: 16px;\n  padding-left: 2em;\n}\n#response-output li {\n  margin-bottom: 0.25em;\n}\n#response-output li > p {\n  /* リストアイテム内の段落のマージン調整 */\n  margin-bottom: 0.25em;\n}\n#response-output pre {\n  background-color: #f6f8fa;\n  padding: 16px;\n  border-radius: 6px;\n  overflow: auto;\n  line-height: 1.45;\n  margin-bottom: 16px;\n}\n#response-output code {\n  font-family:\n    \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n  background-color: rgba(27, 31, 35, 0.05);\n  padding: 0.2em 0.4em;\n  margin: 0;\n  font-size: 85%;\n  border-radius: 3px;\n}\n#response-output pre > code {\n  /* コードブロック内のcodeタグは背景とpaddingをリセット */\n  padding: 0;\n  margin: 0;\n  font-size: 100%;\n  background-color: transparent;\n  border: 0;\n}\n#response-output strong {\n  font-weight: 600;\n}\n#response-output em {\n  font-style: italic;\n}\n#response-output blockquote {\n  margin: 0 0 16px 0;\n  padding: 0 1em;\n  color: #6a737d;\n  border-left: 0.25em solid #dfe2e5;\n}\n#response-output hr {\n  height: 0.25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: #e1e4e8;\n  border: 0;\n}\n#response-output table {\n  border-collapse: collapse;\n  margin-bottom: 16px;\n  display: block;\n  width: 100%;\n  overflow: auto;\n}\n#response-output th,\n#response-output td {\n  padding: 6px 13px;\n  border: 1px solid #dfe2e5;\n}\n#response-output tr {\n  background-color: #fff;\n  border-top: 1px solid #c6cbd1;\n}\n#response-output tr:nth-child(2n) {\n  background-color: #f6f8fa;\n}\n\n.modal {\n  display: none;\n}\n\n.modal.is-open {\n  display: block; /* Micromodalがこのクラスを付けて表示する */\n  /* または display: flex; (overlayで中央寄せする場合) */\n}\n\n.modal__overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6); /* 背景のオーバーレイ */\n  display: flex; /* これが効いていないと中央に来ない */\n  justify-content: center;\n  align-items: center;\n  z-index: 1000; /* 他の要素より手前に */\n}\n\n.modal__container {\n  background-color: #fff;\n  padding: 20px;\n  max-width: 600px;\n  width: 90%;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  overflow-y: auto;\n  max-height: 90vh;\n  /* z-index や position が他の要素との関係で問題を起こしていないか確認 */\n}\n/* モーダル内のタブスタイル */\n.modal-tabs {\n  display: flex;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.tab-item {\n  /* タブボタン自体 */\n  padding: 10px 15px;\n  cursor: pointer;\n  border: none;\n  background: none;\n  font-size: 1em;\n  color: #333;\n  border-bottom: 3px solid transparent;\n  margin-bottom: -1px; /* 下線をタブリストの境界線に重ねる */\n}\n.tab-item:hover {\n  background-color: #f5f5f5;\n}\n.tab-item.active-tab {\n  /* アクティブなタブボタンのスタイル */\n  font-weight: bold;\n  color: #007bff;\n  border-bottom-color: #007bff;\n}\n\n.tab-content {\n  /* タブのコンテンツエリア */\n  display: none; /* 初期状態は非表示 */\n  padding: 15px 0;\n}\n.tab-content.active-tab-content {\n  /* アクティブなタブコンテンツのスタイル */\n  display: block; /* アクティブなものだけ表示 */\n}\n\n/* モーダルウィンドウのフッターとボタンスタイル */\n.modal__footer {\n  padding-top: 15px; /* 上のコンテンツとの間隔 */\n  border-top: 1px solid #e0e0e0; /* 区切り線 */\n  text-align: right; /* ボタンを右寄せ */\n  margin-top: 20px; /* コンテンツとのマージン */\n}\n\n.modal__btn {\n  padding: 10px 20px; /* ボタン内の上下左右の余白を十分に取る */\n  border-radius: 6px; /* 適度な角丸 */\n  border: 1px solid transparent; /* 枠線は最初は透明か、背景色に合わせる */\n  background-color: #f0f0f0; /* デフォルトの背景色 (やや明るいグレー) */\n  color: #333; /* デフォルトの文字色 */\n  font-size: 0.95em; /* フォントサイズ */\n  font-weight: 500; /* 少し太字 */\n  cursor: pointer;\n  margin-left: 10px;\n  transition:\n    background-color 0.2s ease,\n    border-color 0.2s ease,\n    box-shadow 0.2s ease; /* トランジション効果 */\n  text-decoration: none; /* aタグの場合の下線消し */\n  line-height: 1.2; /* 行の高さを適切に */\n  outline: none; /* フォーカス時のデフォルトアウトラインを消す (後で :focus-visible で代替) */\n}\n\n/* 通常のボタンのホバー効果 */\n.modal__btn:hover {\n  background-color: #e0e0e0; /* ホバー時の背景色 */\n  border-color: #d0d0d0; /* ホバー時の枠線色 */\n}\n\n/* 通常のボタンのフォーカス効果 (キーボード操作用) */\n.modal__btn:focus-visible {\n  outline: 2px solid #007bff; /* フォーカスリング */\n  outline-offset: 2px;\n}\n\n/* プライマリボタン (例: 保存ボタン) のスタイル */\n.modal__btn-primary {\n  background-color: #007bff; /* プライマリボタンの背景色 (青) */\n  color: white; /* プライマリボタンの文字色 (白) */\n  border-color: #007bff; /* 枠線も同色 */\n}\n\n/* プライマリボタンのホバー効果 */\n.modal__btn-primary:hover {\n  background-color: #0056b3; /* ホバー時の背景色 (少し濃い青) */\n  border-color: #0056b3;\n}\n\n/* プライマリボタンのフォーカス効果 */\n.modal__btn-primary:focus-visible {\n  outline-color: #0056b3; /* フォーカスリングの色も合わせる */\n}\n\n/* disabled状態のスタイル (もし使う場合) */\n.modal__btn:disabled,\n.modal__btn-primary:disabled {\n  background-color: #e9ecef;\n  color: #adb5bd;\n  border-color: #ced4da;\n  cursor: not-allowed;\n}\n.required-asterisk {\n  color: red;\n  margin-left: 4px; /* ラベルテキストとの間に少しスペース */\n}\n\n.chat-message {\n  display: flex; /* 吹き出しを左右に寄せるため */\n  margin-bottom: 10px;\n  max-width: 85%; /* 吹き出しの最大幅 */\n}\n\n.user-message {\n  justify-content: flex-end; /* ユーザーメッセージを右寄せ */\n  margin-left: auto; /* 右寄せにするための保険 */\n}\n\n.model-message {\n  justify-content: flex-start; /* AIメッセージを左寄せ */\n  margin-right: auto; /* 左寄せにするための保険 */\n}\n\n.message-bubble {\n  padding: 10px 15px;\n  border-radius: 18px;\n  line-height: 1.5;\n  word-wrap: break-word; /* 長い単語も折り返す */\n}\n\n.user-message .message-bubble {\n  background-color: #dcf8c6; /* 例: LINE風の緑 */\n  color: #333;\n  border-top-right-radius: 5px; /* 吹き出しの角を少し変える */\n}\n\n.model-message .message-bubble {\n  background-color: #ffffff; /* AIのメッセージは白に近いグレー */\n  color: #333;\n  border-top-left-radius: 5px;\n}\n\n.model-message.error-rendering .message-bubble {\n  background-color: #ffebee; /* エラー時の背景色 */\n  color: #c62828;\n  border: 1px solid #ef9a9a;\n}\n\n.model-message .message-bubble h1,\n.model-message .message-bubble h2,\n.model-message .message-bubble p /* など */ {\n  margin: 0.5em 0; /* 吹き出し内のマージン調整 */\n}\n\n#history-list li a {\n  display: block;\n  padding: 8px 5px;\n  text-decoration: none;\n  color: #0366d6;\n  font-size: 0.9em;\n  border-bottom: 1px solid #eee;\n}\n#history-list li a:hover {\n  background-color: #f5f5f5;\n}\n.history-title {\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  margin-bottom: 3px;\n}\n.history-timestamp {\n  display: block;\n  font-size: 0.8em;\n  color: #586069;\n}\n"],"names":[],"version":3,"file":"explainfy-project.2cdaf7bc.css.map","sourceRoot":"/__parcel_source_root/"}